{"version":3,"sources":["components/navigation.jsx","components/header.jsx","components/about.jsx","components/skills.jsx","components/image.jsx","components/gallery.jsx","components/contact.jsx","App.jsx","serviceWorker.js","index.js"],"names":["Navigation","props","id","className","type","data-toggle","data-target","href","Header","data","title","paragraph","About","src","alt","Skills","map","d","i","icon","name","text","Image","smallImage","largeImage","data-lightbox-gallery","target","rel","Gallery","link","initialState","email","message","Contact","useState","setState","handleChange","e","value","prevState","validate","onSubmit","preventDefault","console","log","emailjs","sendForm","then","result","error","placeholder","required","onChange","rows","address","phone","medium","twitter","github","LinkedIn","App","SmoothScroll","speed","speedAsDuration","landingPageData","setLandingPageData","useEffect","JsonData","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.dd8ac9bd.chunk.js","sourcesContent":["export const Navigation = (props) => {\n  return (\n    <nav id='menu' className='navbar navbar-default navbar-fixed-top'>\n      <div className='container'>\n        <div className='navbar-header'>\n          <button\n            type='button'\n            className='navbar-toggle collapsed'\n            data-toggle='collapse'\n            data-target='#bs-example-navbar-collapse-1'\n          >\n            {' '}\n            <span className='sr-only'>Toggle navigation</span>{' '}\n            <span className='icon-bar'></span>{' '}\n            <span className='icon-bar'></span>{' '}\n            <span className='icon-bar'></span>{' '}\n          </button>\n          <a className='navbar-brand page-scroll' href='#page-top'>\n            Musa`s Portfolio\n          </a>{' '}\n        </div>\n\n        <div\n          className='collapse navbar-collapse'\n          id='bs-example-navbar-collapse-1'\n        >\n          <ul className='nav navbar-nav navbar-right'>\n            \n            <li>\n              <a href='#about' className='page-scroll'>\n                About\n              </a>\n            </li>\n            <li>\n              <a href='#skills' className='page-scroll'>\n                Skills\n              </a>\n            </li>\n            <li>\n              <a href='#work' className='page-scroll'>\n                My work\n              </a>\n            </li>\n            <li>\n              <a href='#contact' className='page-scroll'>\n                Contact\n              </a>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </nav>\n  )\n}\n","export const Header = (props) => {\n  return (\n    <header id='header'>\n      <div className='intro'>\n        <div className='overlay'>\n          <div className='container'>\n            <div className='row'>\n              <div className='col-md-8 col-md-offset-2 intro-text'>\n                <h1>\n                  {props.data ? props.data.title : 'Loading'}\n                  <span></span>\n                </h1>\n                <p>{props.data ? props.data.paragraph : 'Loading'}</p>\n                \n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </header>\n  )\n}\n","export const About = (props) => {\n  return (\n    <div id=\"about\">\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-xs-12 col-md-6\">\n            {\" \"}\n            <img src=\"img/about.jpeg\" className=\"img-responsive\" alt=\"\" />{\" \"}\n          </div>\n          <div className=\"col-xs-12 col-md-5\">\n            <div className=\"about-text\">\n              <h2>About Me</h2>\n              <p>Musa Opaluwa is an ambitious Nigerian youth and currently a fellow at TIIDElab initiative where \n                he is currently on a six month training to become a problem solver and well sought after software \n                engineer. His skills include HTML, CSS, JavaScript and ReactJs. Prior to that Musa has work with an NGO where\n                 he has experience in developing proposal and facilitating community development and awareness creation.\n                 Musa is  a  Geography graduate from the prestigious Ahmadu Bello university zaria.\n                   Musa has interest in software enginering, he loves travelling and playing table tennis during his free time. \n                   He has one year experiene in desigining responsive website and a firm beliver in mobile first approach.\n                \n               </p>\n              \n              <div className=\"list-style\">\n                <div className=\"col-lg-6 col-sm-6 col-xs-12\">\n                 \n                </div>\n                <div className=\"col-lg-6 col-sm-6 col-xs-12\">\n                  \n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n","export const Skills = (props) => {\n  return (\n    <div id='skills' className='text-center'>\n      <div className='container'>\n        <div className='section-title'>\n          <h2>My skills</h2>\n          \n        </div>\n        <div className='row'>\n          {props.data\n            ? props.data.map((d, i) => (\n                <div key={`${d.name}-${i}`} className='col-md-4'>\n                  {' '}\n                  <i className={d.icon}></i>\n                  <div className='service-desc'>\n                    <h3>{d.name}</h3>\n                    <p>{d.text}</p>\n                  </div>\n                </div>\n              ))\n            : 'loading'}\n        </div>\n      </div>\n    </div>\n  )\n}\n","export const Image = ({ title, largeImage, smallImage, href }) => {\n  return (\n    <div className='portfolio-item'>\n      <div className='hover-bg'>\n        {' '}\n        <a\n          href={href}\n          title={title}\n          data-lightbox-gallery='gallery1'\n          target=\"_blank\"\n          rel=\"noreferrer\"\n        >\n          <div className='hover-text'>\n            <h4>{title}</h4>\n          </div>\n          <img\n            src={smallImage}\n            className='img-responsive'\n            alt={title}\n          />{' '}\n        </a>{' '}\n      </div>\n    </div>\n  )\n}","import { Image } from \"./image\";\n\nexport const Gallery = (props) => {\n  return (\n    <div id='work' className='text-center'>\n      <div className='container'>\n        <div className='section-title'>\n          <h2>Projects</h2>\n          <p>\n          This are some of my group and personal work.\n          </p>\n        </div>\n        <div className='row'>\n          <div className='portfolio-items'>\n            {props.data\n              ? props.data.map((d, i) => (\n                <div key={`${d.title}-${i}`} className='col-sm-6 col-md-4 col-lg-4'>\n                  <Image title={d.title} largeImage={d.largeImage} smallImage={d.smallImage}  href={d.link} />\n                </div>\n              ))\n              : 'Loading...'}\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import { useState } from 'react'\nimport emailjs from 'emailjs-com'\n\nconst initialState = {\n  name: '',\n  email: '',\n  message: '',\n}\nexport const Contact = (props) => {\n  const [{ name, email, message }, setState] = useState(initialState)\n\n  const handleChange = (e) => {\n    const { name, value } = e.target\n    setState((prevState) => ({ ...prevState, [name]: value }))\n  }\n  const clearState = () => setState({ ...initialState })\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    console.log(name, email, message)\n    emailjs\n      .sendForm(\n        'YOUR_SERVICE_ID', 'YOUR_TEMPLATE_ID', e.target, 'YOUR_USER_ID'\n      )\n      .then(\n        (result) => {\n          console.log(result.text)\n          clearState()\n        },\n        (error) => {\n          console.log(error.text)\n        }\n      )\n  }\n  return (\n    <div>\n      <div id='contact'>\n        <div className='container'>\n          <div className='col-md-8'>\n            <div className='row'>\n              <div className='section-title'>\n                <h2>Get In Touch</h2>\n                <p>\n                  Please fill out the form below to send an email and I will\n                  get back to you as soon as possible.\n                </p>\n              </div>\n              <form name='sentMessage' validate onSubmit={handleSubmit}>\n                <div className='row'>\n                  <div className='col-md-6'>\n                    <div className='form-group'>\n                      <input\n                        type='text'\n                        id='name'\n                        name='name'\n                        className='form-control'\n                        placeholder='Name'\n                        required\n                        onChange={handleChange}\n                      />\n                      <p className='help-block text-danger'></p>\n                    </div>\n                  </div>\n                  <div className='col-md-6'>\n                    <div className='form-group'>\n                      <input\n                        type='email'\n                        id='email'\n                        name='email'\n                        className='form-control'\n                        placeholder='Email'\n                        required\n                        onChange={handleChange}\n                      />\n                      <p className='help-block text-danger'></p>\n                    </div>\n                  </div>\n                </div>\n                <div className='form-group'>\n                  <textarea\n                    name='message'\n                    id='message'\n                    className='form-control'\n                    rows='4'\n                    placeholder='Message'\n                    required\n                    onChange={handleChange}\n                  ></textarea>\n                  <p className='help-block text-danger'></p>\n                </div>\n                <div id='success'></div>\n                <button type='submit' className='btn btn-custom btn-lg'>\n                  Send Message\n                </button>\n              </form>\n            </div>\n          </div>\n          <div className='col-md-3 col-md-offset-1 contact-info'>\n            <div className='contact-item'>\n              <h3>Contact Info</h3>\n              <p>\n                <span>\n                  <i className='fa fa-map-marker'></i> Address\n                </span>\n                {props.data ? props.data.address : 'loading'}\n              </p>\n            </div>\n            <div className='contact-item'>\n              <p>\n                <span>\n                  <i className='fa fa-phone'></i> Phone\n                </span>{' '}\n                {props.data ? props.data.phone : 'loading'}\n              </p>\n            </div>\n            <div className='contact-item'>\n              <p>\n                <span>\n                  <i className='fa fa-envelope-o'></i> Email\n                </span>{' '}\n                {props.data ? props.data.email : 'loading'}\n              </p>\n            </div>\n          </div>\n          <div className='col-md-12'>\n            <div className='row'>\n              <div className='social'>\n                <ul>\n                  <li>\n                    <a href={props.data ? props.data.medium : '/'}>\n                      <i className='fa fa-medium'></i>\n                    </a>\n                  </li>\n                  <li>\n                    <a href={props.data ? props.data.twitter : '/'}>\n                      <i className='fa fa-twitter'></i>\n                    </a>\n                  </li>\n                  <li>\n                    <a href={props.data ? props.data.github : '/'}>\n                      <i className='fa fa-github'></i>\n                    </a>\n                  </li>\n                  <li>\n                    <a href={props.data ? props.data.LinkedIn : '/'}>\n                      <i className='fa fa-linkedIn'></i>\n                    </a>\n                  </li>\n                </ul>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div id='footer'>\n        <div className='container text-center'>\n          <p>\n            &copy; 2021 Musa Opaluwa Portfolio{' '}\n\n          </p>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import { useState, useEffect } from \"react\";\nimport { Navigation } from \"./components/navigation\";\nimport { Header } from \"./components/header\";\nimport { About } from \"./components/about\";\nimport { Skills } from \"./components/skills\";\nimport { Gallery } from \"./components/gallery\";\nimport { Contact } from \"./components/contact\";\nimport JsonData from \"./data/data.json\";\nimport SmoothScroll from \"smooth-scroll\";\nimport \"./App.css\";\n\nexport const scroll = new SmoothScroll('a[href*=\"#\"]', {\n  speed: 1000,\n  speedAsDuration: true,\n});\n\nconst App = () => {\n  const [landingPageData, setLandingPageData] = useState({});\n  useEffect(() => {\n    setLandingPageData(JsonData);\n  }, []);\n\n  return (\n    <div>\n      <Navigation />\n      <Header data={landingPageData.Header} />\n      <About data={landingPageData.About} />\n      <Skills data={landingPageData.Skills} />\n      <Gallery data={landingPageData.Gallery}/>\n      <Contact data={landingPageData.Contact} />\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}